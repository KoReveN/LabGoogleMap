@model MapViewModel
@{
    //  ViewData["Title"] = "Home Page";
    ViewBag.Title = "Google map";
}




<div class="space-10"></div>

<div class="row">Please select color of marker:</div>

<div id="test1"></div>

<div class="row">
    <div id="colorSelect"></div>
    <input id="deleteMarkers" type=button value="Delete Markers">
</div>


<div class="space-20"></div>
<div id="map"></div>




@section scripts
    {
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA3YhAyyckDAMFGuVR7yRI-fG_NATvL8Yk" defer></script>
    <script defer>
        //require(["jquery", "kendogrids", "ajax", "toastr"], function ($, kendoGrid, ajax, toastr) {

        // Settings
        var urlTeamMapMarkerAdd = "@Url.Action("TeamMapMarkerAdd")";
        var urlTeamMapMarkersRemove = "@Url.Action("TeamMapMarkersRemove")";
        var colorDataSource =  @Html.Raw(Json.Serialize(Model.MarkerIcons.ToArray()));
        var modelMarkers = @Html.Raw(Json.Serialize(@Model.Markers.ToArray())); //Json.Encode(Model.Markers.ToArray());

        var map;
        var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
        var labelIndex = 1;
        var markerIconUrl = "http://maps.google.com/mapfiles/kml/paddle/blu-circle.png";
        var markers = [];

            // Actions
        var actions = {
            addMapMarker: function (lat, lng, markerIconId) {
                ajax.json({
                    url: urlTeamMapMarkerAdd,
                    data: {
                        Lat: lat,
                        Lng: lng,
                        MarkerIconId: markerIconId,
                    },
                    success: function (responce) {
                        if (responce.success) {
                            toastr.success("Created new marker!");
                            console.log("Created new marker!")
                        } else {
                            toastr.error("Fail: " + responce.message);
                            console.log("Fail: " + responce.message)
                        }
                    },
                    fail: function () {
                        console.log("Failed ajax query....")
                        toastr.error("Failed ajax query....");
                    }
                });
            },
            removeMapMarkers: function (lat, lng, color) {
                ajax.json({
                    url: urlTeamMapMarkersRemove,
                    success: function (responce) {
                        if (responce.success) {
                            toastr.success("Markers was deleted!");
                            console.log("Markers was deleted!");
                            // Clean map markers.
                            clearMarkers();
                            markers = [];

                        } else {
                            toastr.error("Fail: " + responce.message);
                            console.log("Fail: " + responce.message)
                        }
                    },
                    fail: function () {
                        console.log("Failed ajax query....")
                        toastr.error("Failed ajax query....");
                    }
                });
            },


        };
        var helper = {
            initIconsDropDownList: function () {
                $('#colorSelect').kendoDropDownList(
                    {
                        dataSource: colorDataSource,
                        dataTextField: "color",
                        dataValueField: "iconUrl",
                        change: function (e) {
                            // markerIconUrl = this.value();
                        }
                    });
            },
            initGoogleMap: function () {
                var myLatLng = { lat: 46.481, lng: 30.758 };

                map = new google.maps.Map(document.getElementById('map'), {
                    center: { lat: 46.481, lng: 30.758 },
                    zoom: 12
                });


                // Add a markers from the viewModel.
                $.each(modelMarkers, function (index, item) {
                    helper.addMarker(
                        myLatLng = { lat: item.lat, lng: item.lng },
                        map,
                        colorDataSource.find(x => x.markerIconId == item.markerIconId).iconUrl
                    )
                });

                //marker.setIcon(customIcon({
                //    fillColor: '#fff',
                //    strokeColor: '#000'
                //}));
            },
            // Adds a marker to the map.
            addMarker: function (location, map, markerIcon) {
                // Add the marker at the clicked location, and add the next-available label
                // from the array of alphabetical characters.
                var marker = new google.maps.Marker({
                    position: location,
                    label: {
                        text: labelIndex.toString(),//labels[labelIndex++ % labels.length],
                        // color: "#eb3a44",
                        fontSize: "16px",
                        fontWeight: "bold"

                    },
                    icon: {
                        url: markerIcon, //markerIconUrl
                        labelOrigin: new google.maps.Point(33, 21),
                    },
                    //icon: customIcon({
                    //    fillColor: $('#colorSelect').data('kendoDropDownList').value() //markerIconUrl
                    //}),
                    map: map
                });
                labelIndex++;
                markers.push(marker);
            },
        }




        // Deletes all markers in the array by removing references to them.
        function deleteMarkers() {
            actions.removeMapMarkers();
            //clearMarkers();
            //markers = [];
        }






        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers() {
            setMapOnAll(null);
        }

        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        function customIcon(opts) {
            return Object.assign({
                //path: 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z M -2,-30 a 2,2 0 1,1 4,0 2,2 0 1,1 -4,0',
                path: 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z',
                fillColor: '#34495e',
                fillOpacity: 1,
                strokeColor: '#000',
                strokeWeight: 2,
                scale: 1,
            }, opts);
        }




        function registerEventHandlers()
        {
            // This event listener calls addMarker() when the map is clicked.
            google.maps.event.addListener(map, 'click', function (event) {
                helper.addMarker(event.latLng, map, $('#colorSelect').data('kendoDropDownList').value());
                actions.addMapMarker(
                    event.latLng.lat(),
                    event.latLng.lng(),
                    $('#colorSelect').data('kendoDropDownList').dataItem().markerIconId
                )
            });

            $('#deleteMarkers').click(deleteMarkers);

        }




            //var setModelMarkers = function () {
            //    var markers = modelMarkers; //JSON.parse(modelMarkers);
            //}

        function _init() {
            //google.maps.event.addDomListener(window, 'load', helper.initGoogleMap);
            helper.initGoogleMap();
            //setModelMarkers();
            helper.initIconsDropDownList();

                registerEventHandlers();
            }

            $(document).ready(function () {
                _init();
            });

        //});
    </script>

}



<style>
    /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
    #map {
        height: 100%;
        min-height: 500px;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>


@{
    //  (синий, красный, зеленый, фиолетовый и белый).
    //var colorDataSource = [
    //    //{ "Name": "Blue", "Value": "#5D85FD" },
    //    //{ "Name": "Red", "Value": "#FC6356" },
    //    //{ "Name": "Green", "Value": "#59FC7D" },
    //    //{ "Name": "Purple", "Value": "#825AFD" },
    //    //{ "Name": "White", "Value": "#FFFFFF" },

    //    //{ "Name": "Blue", "Value": "http://maps.google.com/mapfiles/ms/icons/blue-dot.png" },
    //    //{ "Name": "Red", "Value": "http://maps.google.com/mapfiles/ms/icons/red-dot.png" },
    //    //{ "Name": "Green", "Value": "http://maps.google.com/mapfiles/ms/icons/green-dot.png" },
    //    //{ "Name": "Purple", "Value": "http://maps.google.com/mapfiles/ms/icons/purple-dot.png" },

    //    { "Name": "Blue", "Value": "http://maps.google.com/mapfiles/kml/paddle/blu-blank.png" },
    //    { "Name": "Red", "Value": "http://maps.google.com/mapfiles/kml/paddle/red-blank.png" },
    //    { "Name": "Green", "Value": "http://maps.google.com/mapfiles/kml/paddle/grn-blank.png" },
    //    { "Name": "Purple", "Value": "http://maps.google.com/mapfiles/kml/paddle/purple-blank.png" },
    //    { "Name": "White", "Value": "http://maps.google.com/mapfiles/kml/paddle/wht-blank.png" }
    //];
}



















<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
